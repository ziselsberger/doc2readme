name: 'doc2readme'
author: ziselsberger
description: |
  Automated extraction of function and class docstrings, 
  and further creation/update of documentation in README File.

inputs:
  PATH_TO_README:
    description: |
      Path to README file. 
      Defaults to "README.md".
    required: false
    default: "README.md"
  ROOT_DIR:
    description: |
      Directory used as root for searching modules. 
      Defaults to folder containing README.md.
    required: false
  EXCLUDED_MODULES:
    description: List of modules to be excluded.
    required: false
  SELECTED_MODULES:
    description: List of selected modules.
    required: false
  SEPARATED:
    description: |
      Create one table per module. 
      Defaults to "true".
    required: false
    default: "true"
  CI_COMMIT_MESSAGE: 
    description: |
      Commit message. 
      Defaults to "Auto-update README.md [skip ci]".
    required: false
    default: "Auto-update README.md [skip ci]"
  CI_COMMIT_AUTHOR: 
    description: |
      For setting git config user.name. 
      Defaults to "AUTO-UPDATE-README".
    required: false
    default: "AUTO-UPDATE-README"
  CI_COMMIT_MAIL: 
    description: |
      For setting git config user.mail. 
      Defaults to "auto_update_readme@users.noreply.github.com".
    required: false
    default: "auto_update_readme@users.noreply.github.com"

runs:
  using: "composite"
  steps:
    - name: Checkout Repo
      uses: actions/checkout@v4

    - name: Install Python
      uses: actions/setup-python@v5
      with:
        python-version: '>=3.9'

    - name: Update README
      shell: bash
      run: |
        git clone 'https://github.com/ziselsberger/doc_to_readme.git'
        cp ./doc_to_readme/src/doc_to_md/doc_to_md.py .
        rm -rf doc_to_readme
        cmd="doc_to_md.py -f ${{ inputs.PATH_TO_README }}"
        if [[ ! -z "${{ inputs.EXCLUDED_MODULES }}" ]]; then
          cmd="$cmd -e ${{ inputs.EXCLUDED_MODULES }}"
        elif [[ ! -z "${{ inputs.SELECTED_MODULES }}" ]]; then
          cmd="$cmd -m ${{ inputs.SELECTED_MODULES }}"
        fi
        if [ ! -z "${{ inputs.ROOT_DIR }}" ]; then
          cmd="$cmd -r ${{ inputs.ROOT_DIR }}"
        fi
        if [ "${{ inputs.SEPARATED }}" = "true" ]; then
          cmd="$cmd --separated"
        fi
        echo $cmd
        python3 $cmd
        rm doc_to_md.py
        lines=$(git status -s | wc -l)
        if [ $lines -gt 0 ];then
          git config --global user.name "${{ inputs.CI_COMMIT_AUTHOR }}"
          git config --global user.email "${{ inputs.CI_COMMIT_MAIL }}"
          git add "${{ inputs.PATH_TO_README }}"
          git commit -m "${{ inputs.CI_COMMIT_MESSAGE }}"
          git push
        fi